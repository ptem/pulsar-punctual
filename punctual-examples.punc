-- Punctual Example File
-- Use Shift+Enter to evaluate each line
-- Use Ctrl+Enter to evaluate blocks (paragraphs)
-- Use Ctrl+Alt+Enter to evaluate all code

-- Default Punctual code from https://dktr0.github.io/Punctual/
x1 << osc $ 0.11*[1,2]; y1 << osc $ 0.08/[3,4];
x2 << osc $ 0.06/[5,6]; y2 << osc $ 0.04*[7,8];
ls << mono $ iline [x1,y1] [x2,y2] 0.002;
col << hsvrgb [osc 0.11,0.5 ~~ 1 $ osc 0.12, 1];
mask << prox 0 ** 8;
a << fit 1 $ ls * col * mask;
gate 0.1 (maxp a (fb * 0.98)) >> add <> 5

-- Clear output (hush)
0 >> add

-- Bouncing balls (from savamala docs)
fit 1 $ (circle [-0.6, osc 0.25] 0.1 * [1,0,0] +:
circle [-0.2, tri 0.25] 0.1 * [0,0,1] +:
circle [0.2, saw 0.25] 0.1 * [1,0,1] +:
circle [0.6, osc 0.5] 0.1 * [0,1,0]) >> add;



-- Beats (from savamala docs)
fit 1 $ circle (-0.25) (0.2 - 0.2*saw (cps*4)) >> add;
pos << [time%1, beat%1, (beat*4)%1];
hline pos 0.01 >> add;

-- Modified savamala example to use beats
synth mn = (sqr $ midicps mn) * (dbamp (-10));
synth $ seq [50, 0, 30, 0] >> audio;
rt << [sin $ 0.5*pi*((2*beat)%4), ((2*beat)%4)];
c << circle (0.2*rtxy rt) 0.2;
pattern << fit 1 $ setfxy [0.1*fr*((8*beat)%16),ft*((8*beat)%4)] $ tilexy [2*pi,pi] c;
pattern * [2*(beat%2),0,(beat%1)] >> add;
move [-0.5*((2*beat)%16),0] fb >> add;
